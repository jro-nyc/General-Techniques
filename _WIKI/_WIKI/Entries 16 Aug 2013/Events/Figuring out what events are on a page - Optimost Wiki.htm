<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" dir="ltr" lang="en"><head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<meta name="generator" content="MediaWiki 1.13.1">
		<meta name="keywords" content="Figuring out what events are on a page">
		<link rel="shortcut icon" href="http://wiki.interwoven.com/favicon.ico">
		<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.interwoven.com/opwiki/opensearch_desc.php" title="Optimost Wiki (en)">
		<link rel="alternate" type="application/rss+xml" title="Optimost Wiki RSS Feed" href="http://wiki.interwoven.com/opwiki/index.php?title=Special:RecentChanges&amp;feed=rss">
		<link rel="alternate" type="application/atom+xml" title="Optimost Wiki Atom Feed" href="http://wiki.interwoven.com/opwiki/index.php?title=Special:RecentChanges&amp;feed=atom">
		<title>Figuring out what events are on a page - Optimost Wiki</title>
		<style type="text/css" media="screen, projection">/*<![CDATA[*/
			@import "/opwiki/skins/common/shared.css?164";
			@import "/opwiki/skins/monobook/main.css?164";
		/*]]>*/</style>
		<link rel="stylesheet" type="text/css" media="print" href="Figuring%20out%20what%20events%20are%20on%20a%20page%20-%20Optimost%20Wiki_files/commonPrint.css">
		<!--[if lt IE 5.5000]><style type="text/css">@import "/opwiki/skins/monobook/IE50Fixes.css?164";</style><![endif]-->
		<!--[if IE 5.5000]><style type="text/css">@import "/opwiki/skins/monobook/IE55Fixes.css?164";</style><![endif]-->
		<!--[if IE 6]><style type="text/css">@import "/opwiki/skins/monobook/IE60Fixes.css?164";</style><![endif]-->
		<!--[if IE 7]><style type="text/css">@import "/opwiki/skins/monobook/IE70Fixes.css?164";</style><![endif]-->
		<!--[if lt IE 7]><script type="text/javascript" src="/opwiki/skins/common/IEFixes.js?164"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
		
		<script type="text/javascript">/*<![CDATA[*/
var skin = "monobook";
var stylepath = "/opwiki/skins";
var wgArticlePath = "/optimost/$1";
var wgScriptPath = "/opwiki";
var wgScript = "/opwiki/index.php";
var wgVariantArticlePath = false;
var wgActionPaths = [];
var wgServer = "http://wiki.interwoven.com";
var wgCanonicalNamespace = "";
var wgCanonicalSpecialPageName = false;
var wgNamespaceNumber = 0;
var wgPageName = "Figuring_out_what_events_are_on_a_page";
var wgTitle = "Figuring out what events are on a page";
var wgAction = "view";
var wgArticleId = "729";
var wgIsArticle = true;
var wgUserName = null;
var wgUserGroups = null;
var wgUserLanguage = "en";
var wgContentLanguage = "en";
var wgBreakFrames = false;
var wgCurRevisionId = "5091";
var wgVersion = "1.13.1";
var wgEnableAPI = true;
var wgEnableWriteAPI = false;
var wgRestrictionEdit = [];
var wgRestrictionMove = [];
/*]]>*/</script>
                
		<script type="text/javascript" src="Figuring%20out%20what%20events%20are%20on%20a%20page%20-%20Optimost%20Wiki_files/wikibits.js"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="Figuring%20out%20what%20events%20are%20on%20a%20page%20-%20Optimost%20Wiki_files/ajax.js"></script>
		<script type="text/javascript" src="Figuring%20out%20what%20events%20are%20on%20a%20page%20-%20Optimost%20Wiki_files/index.php"><!-- site js --></script><script type="text/javascript" src="Figuring%20out%20what%20events%20are%20on%20a%20page%20-%20Optimost%20Wiki_files/index_002.php"></script>
		<style type="text/css">/*<![CDATA[*/
@import "/opwiki/index.php?title=MediaWiki:Common.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
@import "/opwiki/index.php?title=MediaWiki:Monobook.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
@import "/opwiki/index.php?title=-&action=raw&gen=css&maxage=18000";
/*]]>*/</style>
	</head>
<body class="mediawiki ns-0 ltr page-Figuring_out_what_events_are_on_a_page">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
				<h1 class="firstHeading">Figuring out what events are on a page</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From Optimost Wiki</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table id="toc" class="toc" summary="Contents"><tbody><tr><td><div id="toctitle"><h2>Contents</h2> <span class="toctoggle">[<a href="javascript:toggleToc()" class="internal" id="togglelink">hide</a>]</span></div>
<ul>
<li class="toclevel-1"><a href="#Figuring_out_what_events_are_on_the_page_-_DOM_Level_0"><span class="tocnumber">1</span> <span class="toctext">Figuring out what events are on the page - DOM Level 0</span></a>
<ul>
<li class="toclevel-2"><a href="#For_Firefox_using_Firebug"><span class="tocnumber">1.1</span> <span class="toctext">For Firefox using Firebug</span></a></li>
<li class="toclevel-2"><a href="#For_any_browser"><span class="tocnumber">1.2</span> <span class="toctext">For any browser</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Figuring_out_what_events_are_on_the_page_-_DOM_Level_2"><span class="tocnumber">2</span> <span class="toctext">Figuring out what events are on the page - DOM Level 2</span></a>
<ul>
<li class="toclevel-2"><a href="#Level_2_differences"><span class="tocnumber">2.1</span> <span class="toctext">Level 2 differences</span></a></li>
<li class="toclevel-2"><a href="#Mixing_and_matching_Level_0_and_Level_2"><span class="tocnumber">2.2</span> <span class="toctext">Mixing and matching Level 0 and Level 2</span></a></li>
<li class="toclevel-2"><a href="#Level_2_code_example"><span class="tocnumber">2.3</span> <span class="toctext">Level 2 code example</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Simple_example"><span class="tocnumber">3</span> <span class="toctext">Simple example</span></a></li>
<li class="toclevel-1"><a href="#Level_2_issues:_Passing_Parameters_into_function_and_Bubbling_of_events"><span class="tocnumber">4</span> <span class="toctext">Level 2 issues: Passing Parameters into function and Bubbling of events</span></a>
<ul>
<li class="toclevel-2"><a href="#Function_definition"><span class="tocnumber">4.1</span> <span class="toctext">Function definition</span></a></li>
<li class="toclevel-2"><a href="#Passing_Parameters_vis_attributes:BUBBLING_of_events"><span class="tocnumber">4.2</span> <span class="toctext">Passing Parameters vis attributes:BUBBLING of events</span></a>
<ul>
<li class="toclevel-3"><a href="#How_to_code_around_it"><span class="tocnumber">4.2.1</span> <span class="toctext">How to code around it</span></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</td></tr></tbody></table><script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<a name="Figuring_out_what_events_are_on_the_page_-_DOM_Level_0"></a><h2> <span class="mw-headline">Figuring out what events are on the page - DOM Level 0</span></h2>
<p>DOM Level 0 events follow this format:
</p>
<pre>obj.onclick = eventFunction;
</pre>
<p>In order to find all these events on the page, you can write a 
function to crawl through all the nodes on the page and check the 
element nodes for events - in this case, onclick events. You could do 
this for other events, too.
</p>
<a name="For_Firefox_using_Firebug"></a><h3> <span class="mw-headline">For Firefox using Firebug</span></h3>
<p>Put the following in the console tab and hit "run"
</p>
<pre>function walkTheDOM(container) {
	var ELEMENT_NODE=1;
	var children=container.childNodes; 
	for(var i=children.length-1;i&gt;-1;i--){
		if(children[i].nodeType==ELEMENT_NODE) {
			if(children[i].onclick!=null) alert(children[i].onclick.toString());
			walkTheDOM(children[i]); 	
		}		
	} 
} 
walkTheDOM(document.body);
</pre>
<a name="For_any_browser"></a><h3> <span class="mw-headline">For any browser</span></h3>
<p>Put the following in the location bar - ie where the URL is.  I have 
shortened the variable and function names to make it compact:
</p><p><code>
javascript:function wd(cn) {var en=1;var cr=cn.childNodes;for(var 
i=cr.length-1;i&gt;-1;i--){if(cr[i].nodeType==en){if(cr[i].onclick!=null)
 alert(cr[i].onclick.toString());wd(cr[i]);}}}wd(document.body);
</code>
</p>
<a name="Figuring_out_what_events_are_on_the_page_-_DOM_Level_2"></a><h2> <span class="mw-headline">Figuring out what events are on the page - DOM Level 2</span></h2>
<p>DOM Level 2 events follow this format:
</p>
<pre>obj.attachEvent("onclick"+evt,eventFunction); //For IE
obj.addEventListener("click",eventFunction,false); //For All others
</pre>
<p>If the browser supports Level 2 events, it will also support Level 0 
events, so, since Level 2 has cross-browser differences, why bother with
 Level 2?
</p>
<a name="Level_2_differences"></a><h3> <span class="mw-headline">Level 2 differences</span></h3>
<p>From an Optimost perspective, there are two major differences between Level 0 and Level 2.
</p>
<ol><li>Level 0 events work with all browsers.
</li><li>Level 0 events must account for the existince of the chosen event on the node of interest.
</li><li>Level 0 events can be found by parsing the DOM and looking for the chosen event on any node.
</li><li>Level 2 events must account for the browsers - IE vs W3C.
</li><li>Level 2 events do not have to account for other instances of the chose event on the node, all will be executed.
</li><li>Level 2 events <b>cannot</b> be found by parsing the DOM and looking for the chosen event on any node.
</li></ol>
<p>So for Level 2 events, you need to keep track of what events you added order to make any future changes to them.
</p><p><b>SO THERE IS NO WAY TO FIND OUT WHAT LEVEL 2 EVENTS ARE ON THE PAGE</b>.  There is a W3C spec to add this to future browsers, but it is not in yet. 
</p>
<a name="Mixing_and_matching_Level_0_and_Level_2"></a><h3> <span class="mw-headline">Mixing and matching Level 0 and Level 2</span></h3>
<ul><li>What if a node already has a Level 2 event?  
</li></ul>
<p>Well, if we add another level 2 or a new Level 2 event, all the 
events will be executed, provided the first event executed does not 
navigate us away from the page.
</p>
<ul><li>What if a node already has a Level 0 event?  
</li></ul>
<p>If you are adding a Level 2 event, no problem.  If you are adding a 
Level 0 event, you must add the new function to the old one, and 
determine if the two can run one after the other, as in.  
</p>
<pre>if(typeof(obj.onclick)!="function") obj.onclick=new Function("eventFunction();return true;");
else{
	temp=obj.onclick.toString();
	temp=temp.substring(temp.indexOf("{") + 1, temp.lastIndexOf("}"));
	obj.onclick=new Function("eventFunction();"+temp);
}
</pre>
<a name="Level_2_code_example"></a><h3> <span class="mw-headline">Level 2 code example</span></h3>
<p>Here is some basic code to add a Level 2 event:
</p>
<pre>function addEvent(el,evt,func,bubble){
	if(!el || typeof(func)&nbsp;!="function"){return false;}
	bubble = bubble || false;
	var evtType=(window.attachEvent)?"attach":(window.addEventListener)? "add":"none";
	if(evtType == "attach"){el.attachEvent("on"+evt,func);}
	else if(evtType == "add"){el.addEventListener(evt,func,bubble);}
}	
</pre>
<ul><li><b>el</b> - is the object you want to add the event to
</li><li><b>evt</b> - is the event, ie <b>"click"</b>, <b>"mouseover"</b>, etc
</li><li><b>func</b> - is the function to be called
</li><li><b>bubble</b> - is whether you want the event to bubble, just set to false if you are not sure.
</li></ul>
<a name="Simple_example"></a><h2> <span class="mw-headline">Simple example</span></h2>
<p>Here is an example for adding Level 0 and Level2 events, and seeing what happens.
</p><p><a href="http://kidwww.optimost.com/webtest/jim/eventx.html" class="external free" title="http://kidwww.optimost.com/webtest/jim/eventx.html" rel="nofollow">http://kidwww.optimost.com/webtest/jim/eventx.html</a>
</p><p>and here is the HTML for the code
</p>
<pre>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Testing event listener and onclick&lt;/title&gt;
&lt;script&gt;
$opt={
	addEvent:function(el,evt,func,bubble){
		if(!el || typeof(func)&nbsp;!="function"){return false;}
		bubble = bubble || false;
		var evtType=(window.attachEvent)?"attach":(window.addEventListener)? "add":"none";
		if(evtType == "attach"){el.attachEvent("on"+evt,func);}
		else if(evtType == "add"){el.addEventListener(evt,func,bubble);}
	}	
}

function walkTheDOM(container) {
	var TEXT_NODE=3;
	var ELEMENT_NODE=1;
	var children=container.childNodes; 
	for(var i=children.length-1;i&gt;-1;i--){
		if(children[i].nodeType==ELEMENT_NODE) {
			for(var n in children[i]){
				if(typeof(children[i][n])=="function"){
					if(children[i][n].toString().toLowerCase().indexOf('found event')!=-1) 
						alert(children[i][n].toString());	
					else if(n.toLowerCase().indexOf('click')!=-1) 
						alert(children[i][n].toString());	
				}
			} 
			walkTheDOM(children[i]); 							
		}		
	} 
} 

function AddEventListeners(){
	anchors=document.getElementsByTagName('a');
	for(var i=0;i&lt;anchors.length;i++){
		if(eventsAdded==1)
			$opt.addEvent(anchors[i],"click",new Function("alert('found event listener #1 event');return false;"),false);	
		else if(eventsAdded==2)
			$opt.addEvent(anchors[i],"click",new Function("alert('found event listener #2 event');return false;"),false);	
		else if(eventsAdded==3)
			$opt.addEvent(anchors[i],"click",new Function("alert('found event listener #3 event');return false;"),false);	
		else if(eventsAdded==4)
			$opt.addEvent(anchors[i],"click",new Function("alert('found event listener #4 event');return false;"),false);	
		else if(eventsAdded==5)
			$opt.addEvent(anchors[i],"click",new Function("alert('found event listener #5 event');return false;"),false);	
		else if(eventsAdded==6)
			$opt.addEvent(anchors[i],"click",new Function("alert('found event listener #7 event');return false;"),false);	
		else if(eventsAdded&gt;6)
			$opt.addEvent(anchors[i],"click",new Function("alert('found event listener #nth event');return false;"),false);	
	}	
	eventsAdded++;
}

var eventsAdded=1;
function AddOnClicks(){
	anchors=document.getElementsByTagName('a');
	for(var i=0;i&lt;anchors.length;i++){
		anchors[i].onclick=new Function("alert('found onclick event');return false;");
	}	
}
&lt;/script&gt;
&lt;style&gt;
.header{font-size:20px;color:#990000;width:500px;border:#990000 1px solid;padding:10px;}
.box_1_bl{width:500px;border:#ff0000;border:#0000ff 1px solid;margin:10px 0 10px 0;padding:10px;}
&lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;div class="header"&gt;
This page is for showing Level 0 versus Level 2 events.
 Follow the instructions on the buttons below the text, 
then click on any anchor tag, and see what happens. 
There are initially no events on the anchor tag, but clicking on the links adds them. 
Click on the buttons repeatedly and see what happens.

&lt;/div&gt;
&lt;div class="box_1_bl"&gt;
	&lt;div class="box_1_br"&gt;
		&lt;div class="section_1"&gt;Take a minute now to 
			&lt;a rel="nofollow" href="/thedailyplate/users/join/"&gt;create your free account&lt;/a&gt;; 
			we'll store your data for as long as you want!  Until you 
			&lt;a rel="nofollow" href="/thedailyplate/users/join/"&gt;register&lt;/a&gt;, 
			we'll only hold your data for a few days. And only registered members can 
			&lt;a rel="nofollow" href="/thedailyplate/users/myinfo/"&gt;
			calculate their	daily calorie goals&lt;/a&gt; to lose or maintain weight!				
			&lt;div style="font-size: 14px; line-height:18px; margin: 5px 0px 0px 0px;"&gt;
				&lt;span class="error"&gt;You haven't yet tracked any foods for today. 
				&lt;a href="/thedailyplate/"&gt;Search for what you eat&lt;/a&gt;,
				and then click "I ate this!" to start tracking your calories.&lt;/span&gt;
			&lt;/div&gt;
		&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;button onclick="walkTheDOM(document.body)"&gt;walkTheDOM and show me all the onclick events&lt;/button&gt;&lt;br/&gt;&lt;br/&gt;
&lt;button onclick="AddEventListeners()"&gt;AddEventListeners or Level 2 event&lt;/button&gt;&lt;br/&gt;&lt;br/&gt;
&lt;button onclick="AddOnClicks()"&gt;Add onclicks or Level 0 event&lt;/button&gt;&lt;br/&gt;&lt;br/&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>
<a name="Level_2_issues:_Passing_Parameters_into_function_and_Bubbling_of_events"></a><h2> <span class="mw-headline">Level 2 issues: Passing Parameters into function and Bubbling of events</span></h2>
<p>For level 2, there are some differences in how you will have to 
define the function that is called by the event, and also have to 
consider the difference between a Level 0 and Level 2 "event".
</p>
<a name="Function_definition"></a><h3> <span class="mw-headline">Function definition</span></h3>
<p>When you do a Level 0 event, you pass the parameters in directly through the event, such as:
</p>
<pre>&lt;a id="testAnchor" href="demo.html" onclick="doMyOnclick(this, myValue,"span",true);"&gt;Look at Demo&lt;/a&gt;
</pre>
<p>or if I add it to the anchor via jsvascript:
</p>
<pre>&lt;a id="testAnchor" href="demo.html"&gt;Look at Demo&lt;/a&gt;
&lt;script&gt;
obj=document.getElementById("testAnchor");
if(obj){
	if(typeof(obj.onclick)!="function") obj.onclick=new Function('doMyOnclick(this, myValue,"span",true);return false;');
	else{
		temp=obj.onclick.toString();
		temp=temp.substring(temp.indexOf("{") + 1, temp.lastIndexOf("}"));
		obj.onclick=new Function('doMyOnclick(this, myValue,"span",true);return false;'+temp);
	}
}
&lt;/script&gt;
</pre>
<p>For a level 2, you pass the "function" in a similar manner, but do 
not have to worry about previous existing events.  So for a level 2 
event, you would say:
</p>
<pre>&lt;a id="testAnchor" href="demo.html"&gt;Look at Demo&lt;/a&gt;
&lt;script&gt;
obj=document.getElementById("testAnchor");
if(obj){
	$opt.addEvent(obj,"click",new Function('doMyOnclick(this, myValue,"span",true);'),true);
}
&lt;/script&gt;
</pre>
<a name="Passing_Parameters_vis_attributes:BUBBLING_of_events"></a><h3> <span class="mw-headline">Passing Parameters vis attributes:BUBBLING of events</span></h3>
<p>You may also choose to pass parameters via attributes - add attributes to the node with the event, then read them using the <b>"this"</b>
 property for the node that triggered the event.  We read the event 
object's attributes for click tracking since we need to change the <b>href</b> value to track the click.
</p><p>You can use <b>"this"</b> for a Level 0 event, but the big difference here is the <b>Bubbling</b> of Level 2 events .  In Level 0, when you get an event triggered, you know 100% that <b>this</b> will be the node with the onclick event.  But for Level 2, becuase of <b>Bubbling</b>
 of events, it may in fact be a node INSIDE the node containing the 
event, so you may have to look through the node triggering the event's 
parent nodes until you find the node that the event was attached to.  So
 for Level 2, <b>this</b> is not useful.
</p>
<a name="How_to_code_around_it"></a><h4> <span class="mw-headline">How to code around it</span></h4>
<p>So let's take a clickthru function we've used before and show how we get around some of the Level 2 event limitations.
</p>
<ol><li>"<b>evt</b>" is the event - which can be passed into a Level 2 event - and to find the node that triggered the event, we look for <b>evt["srcElement"]</b> in IE or <b>evt["target"]</b> in the other browsers.  Once found, I am calling the node <b>evtX.</b>
</li><li>With <b>evtX</b> in hand, in order to find the node of interest - the "<b>this</b>"
 workaround --- in this example we will assume that we are looking for 
an anchor tag that contains an image, so since the event may trigger 
from the image, if our node is not the anchor tag, we need to look at 
its parentNode to find the anchor tag.  In case there are more nested 
elements, it is a <b>do{...}while</b> loop that continues until it finds an anchor tag OR reaches the <b>body</b> tag.
</li><li>You will notice that I am looking for an attribute of the node that contains the clickthru value - <b>evtX.ckthru</b> - and an attribute that contains the name of my query string paramter - <b>evtX.ckparam</b>.
  As far as I have seen, you cannot pass parameters into Level 2 events,
 so I pass them in by attaching them as attributes for that node (not 
here, but I would do this when I define the Level 2 event to call this 
function).
</li></ol>
<pre>&lt;script&gt;
$opt.doClickthru = function(evt){
	var randNum=Math.floor(Math.random()*1000000);
	evtX=(evt["srcElement"]?evt["srcElement"]:evt["target"]);
	
	do{  //The event triggered MAY NOT be our anchor tag, so we need to find &lt;a&gt; to get the attributes we are passing in
		if(evtX.tagName.toLowerCase()!="a")evtX=evtX.parentNode;
	} while(evtX.tagName.toLowerCase()!="a" &amp;&amp; evtX.tagName.toLowerCase()!="body" );	

	if (typeof(evtX.originaltarget)&nbsp;!= 'undefined') return false; //see if we have done this click before
	evtX.originaltarget = 'done'; //mark with click so we won't do it again

	var ct="";
	if(evtX["ckthru"]!=null)ct=evtX["ckthru"];

	var qsParam ="link";
	if(evtX["ckparam"]!=null)qsParam =evtX["ckparam"];
	if (evtX.tagName.toLowerCase() == "form") h=evtX.action;
	else h=evtX.href;
	if (h.substr(0,4)&nbsp;!= "http"){
		if (h.substr(0,1) == "/"){
		// link is relative to document domain
			h = location.protocol + "//" +location.host + h;
		}
		else {
		// link is relative to document path
			path=location.pathname.substr(0,location.pathname.lastIndexOf('/')+1);
			h = location.protocol + "//" +location.host + path + h;
		}
	} 
	h = ct+(ct.indexOf('?')==-1?'?':'&amp;') + qsParam +'=' + escape(h);
	//alert(h);
	if (evtX.tagName.toLowerCase() == "form")
		evtX.action= h;
	else
		evtX.href= h;
	return true;
}
&lt;/script&gt;
</pre>
<p>And we create this event from an anchor tag we want to track:
</p>
<pre>&lt;script&gt;
var opPhoneButton = document.getElementById("insuranceLink");
if(opPhoneButton ){
	opPhoneButton.ckthru="{{$creative.sessionId}}";
	opPhoneButton.ckparam="link";
	$opt.addEvent(opPhoneButton,"click",$opt.doClickthru,false);
}
&lt;/script&gt;
</pre>

<!-- 
NewPP limit report
Preprocessor node count: 47/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key optimost_wiki:pcache:idhash:729-0!1!0!!en!2!edit=0 and timestamp 20130816144535 -->
<div class="printfooter">
Retrieved from "<a href="http://wiki.interwoven.com/optimost/Figuring_out_what_events_are_on_a_page">http://wiki.interwoven.com/optimost/Figuring_out_what_events_are_on_a_page</a>"</div>
						<!-- end content -->
			<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="http://wiki.interwoven.com/optimost/Figuring_out_what_events_are_on_a_page" title="View the content page [alt-shift-c]" accesskey="c">Page</a></li>
				 <li id="ca-talk" class="new"><a href="http://wiki.interwoven.com/opwiki/index.php?title=Talk:Figuring_out_what_events_are_on_a_page&amp;action=edit" title="Discussion about the content page [alt-shift-t]" accesskey="t">Discussion</a></li>
				 <li id="ca-viewsource"><a href="http://wiki.interwoven.com/opwiki/index.php?title=Figuring_out_what_events_are_on_a_page&amp;action=edit" title="This page is protected.
You can view its source. [alt-shift-e]" accesskey="e">View source</a></li>
				 <li id="ca-history"><a href="http://wiki.interwoven.com/opwiki/index.php?title=Figuring_out_what_events_are_on_a_page&amp;action=history" title="Past versions of this page. [alt-shift-h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-anonuserpage"><a href="http://wiki.interwoven.com/optimost/User:10.26.10.11" title="The user page for the ip you're editing as [alt-shift-.]" accesskey="." class="new">10.26.10.11</a></li>
				<li id="pt-anontalk"><a href="http://wiki.interwoven.com/optimost/User_talk:10.26.10.11" title="Discussion about edits from this ip address [alt-shift-n]" accesskey="n" class="new">Talk for this IP</a></li>
				<li id="pt-anonlogin"><a href="http://wiki.interwoven.com/opwiki/index.php?title=Special:UserLogin&amp;returnto=Figuring_out_what_events_are_on_a_page" title="You are encouraged to log in, it is not mandatory however. [alt-shift-o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(http://wiki.interwoven.com/opwiki/images/1/18/Logo_optimost.gif);" href="http://wiki.interwoven.com/optimost/Home" title="Visit the Main Page [alt-shift-z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/optimost/Special:Search" id="searchform"><div>
				<input id="searchInput" name="search" title="Search Optimost Wiki [alt-shift-f]" accesskey="f" type="text">
				<input name="go" class="searchButton" id="searchGoButton" value="Go" title="Go to a page with this exact name if exists" type="submit">&nbsp;
				<input name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text" type="submit">
			</div></form>
		</div>
	</div>
	<div class="generated-sidebar portlet" id="p-navigation">
		<h5>Navigation</h5>
		<div class="pBody">
			<ul>
				<li id="n-mainpage"><a href="http://wiki.interwoven.com/optimost/Home" title="Visit the Main Page [alt-shift-z]" accesskey="z">Home</a></li>
				<li id="n-recentchanges"><a href="http://wiki.interwoven.com/optimost/Special:RecentChanges" title="The list of recent changes in the wiki. [alt-shift-r]" accesskey="r">Recent changes</a></li>
				<li id="n-randompage"><a href="http://wiki.interwoven.com/optimost/Special:Random" title="Load a random page [alt-shift-x]" accesskey="x">Random page</a></li>
				<li id="n-Accounts"><a href="http://wiki.interwoven.com/optimost/Accounts">Accounts</a></li>
				<li id="n-Glossary"><a href="http://wiki.interwoven.com/optimost/Glossary">Glossary</a></li>
				<li id="n-help"><a href="http://wiki.interwoven.com/optimost/Help:Contents" title="The place to find out.">Help</a></li>
			</ul>
		</div>
	</div>
	<div class="generated-sidebar portlet" id="p-departments">
		<h5>departments</h5>
		<div class="pBody">
			<ul>
				<li id="n-Analytics"><a href="http://wiki.interwoven.com/optimost/Analytics_%28Department%29">Analytics</a></li>
				<li id="n-Client-Services"><a href="http://wiki.interwoven.com/optimost/Category:Client_Services">Client Services</a></li>
				<li id="n-Documentation"><a href="http://wiki.interwoven.com/optimost/Documentation">Documentation</a></li>
				<li id="n-Engineering"><a href="http://wiki.interwoven.com/optimost/Engineering">Engineering</a></li>
				<li id="n-Quality-Assurance"><a href="http://wiki.interwoven.com/optimost/Category:Quality_Assurance">Quality Assurance</a></li>
				<li id="n-Technical-Consulting"><a href="http://wiki.interwoven.com/optimost/Technical_consulting">Technical Consulting</a></li>
				<li id="n-Training-.26-Education"><a href="http://wiki.interwoven.com/optimost/Training_and_education">Training &amp; Education</a></li>
			</ul>
		</div>
	</div>
	<div class="generated-sidebar portlet" id="p-links">
		<h5>links</h5>
		<div class="pBody">
			<ul>
				<li id="n-Optimost-Console"><a href="http://asp.optimost.com/agency">Optimost Console</a></li>
				<li id="n-Optimost-Public-Site"><a href="http://www.interwoven.com/optimost">Optimost Public Site</a></li>
				<li id="n-Netspeed"><a href="http://netspeed/">Netspeed</a></li>
				<li id="n-SalesSite"><a href="http://salessite/">SalesSite</a></li>
				<li id="n-WorkSite"><a href="https://worksitemp.interwoven.com/worksitemp/link//V3/INTERWOVEN/C/F$217/C$14610/">WorkSite</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="http://wiki.interwoven.com/optimost/Special:WhatLinksHere/Figuring_out_what_events_are_on_a_page" title="List of all wiki pages that link here [alt-shift-j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="http://wiki.interwoven.com/optimost/Special:RecentChangesLinked/Figuring_out_what_events_are_on_a_page" title="Recent changes in pages linked from this page [alt-shift-k]" accesskey="k">Related changes</a></li>
<li id="t-upload"><a href="http://wiki.interwoven.com/optimost/Special:Upload" title="Upload files [alt-shift-u]" accesskey="u">Upload file</a></li>
<li id="t-specialpages"><a href="http://wiki.interwoven.com/optimost/Special:SpecialPages" title="List of all special pages [alt-shift-q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="http://wiki.interwoven.com/opwiki/index.php?title=Figuring_out_what_events_are_on_a_page&amp;printable=yes" title="Printable version of this page [alt-shift-p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="http://wiki.interwoven.com/opwiki/index.php?title=Figuring_out_what_events_are_on_a_page&amp;oldid=5091" title="Permanent link to this version of the page">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="Figuring%20out%20what%20events%20are%20on%20a%20page%20-%20Optimost%20Wiki_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki"></a></div>
			<ul id="f-list">
				<li id="lastmod"> This page was last modified on 18 May 2010, at 12:13.</li>
				<li id="viewcount">This page has been accessed 97 times.</li>
				<li id="privacy"><a href="http://wiki.interwoven.com/optimost/Optimost_Wiki:Privacy_policy" title="Optimost Wiki:Privacy policy">Privacy policy</a></li>
				<li id="about"><a href="http://wiki.interwoven.com/optimost/Optimost_Wiki:About" title="Optimost Wiki:About">About Optimost Wiki</a></li>
				<li id="disclaimer"><a href="http://wiki.interwoven.com/optimost/Optimost_Wiki:General_disclaimer" title="Optimost Wiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served in 0.213 secs. -->
</body></html>